{"version":3,"sources":["content/homePage.js","content/login.js","content/registry.js","header/header.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","className","Login","useState","login","password","data","setData","inputChanger","e","newData","target","id","value","onSubmit","preventDefault","localStorage","setItem","JSON","stringify","axios","post","then","res","console","log","type","placeholder","onChange","color","Option","Select","residences","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Registry","Form","useForm","form","prefixSelector","Item","name","noStyle","style","width","onFinish","values","initialValues","residence","prefix","scrollToFirstError","rules","message","required","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","tooltip","whitespace","options","addonBefore","extra","gutter","valuePropName","href","htmlType","Header","to","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42c7dcc3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"home\">\r\n        <h1>This is Homepage</h1>\r\n        <h1>This is Homepage</h1>\r\n        <h1>This is Homepage</h1>\r\n        <h1>This is Homepage</h1>\r\n        <h3>Этот проект загружен на  GitHub Pages</h3>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\nexport default function Login() {\r\n  const url = 'https://jsonplaceholder.typicode.com/users'\r\n  const [data, setData] = useState({\r\n    login: '',\r\n    password: '',\r\n  })\r\n\r\n  const formClick = (e) => {\r\n    e.preventDefault()\r\n    localStorage.setItem('data', JSON.stringify(data))\r\n    axios\r\n      .post(url, {\r\n        login: data.login,\r\n        password: data.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data)\r\n      })\r\n  }\r\n\r\n  function inputChanger(e) {\r\n    const newData = { ...data }\r\n    newData[e.target.id] = e.target.value\r\n    setData(newData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"login\">\r\n        <Form onSubmit={formClick}>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"login\"\r\n              placeholder=\"login\"\r\n              onChange={(e) => inputChanger(e)}\r\n              value={data.login}\r\n            />\r\n          </FormGroup>\r\n          <br />\r\n          <FormGroup>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"password\"\r\n              onChange={(e) => inputChanger(e)}\r\n              value={data.password}\r\n            />\r\n          </FormGroup>\r\n          <br />\r\n          <Button color=\"info\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button } from 'antd'\r\n\r\nconst { Option } = Select\r\nconst residences = [\r\n  {\r\n    value: 'Россия',\r\n    label: 'Россия',\r\n    children: [\r\n      {\r\n        value: 'Москва',\r\n        label: 'Москва',\r\n        children: [\r\n          {\r\n            value: 'Кремль',\r\n            label: 'Кремль',\r\n          },\r\n          {\r\n            value: 'Арбат',\r\n            label: 'Арбат',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        value: 'Санкт-Петергбург',\r\n        label: 'Санкт-Петергбург',\r\n        children: [\r\n          {\r\n            value: 'Фонтанка',\r\n            label: 'Фонтанка',\r\n          },\r\n          {\r\n            value: 'Васильевский остров',\r\n            label: 'Васильевский остров',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'Беларусь',\r\n    label: 'Беларусь',\r\n    children: [\r\n      {\r\n        value: 'Минск',\r\n        label: 'Минск',\r\n        children: [\r\n          {\r\n            value: 'Московский район',\r\n            label: 'Московский район',\r\n            children: [\r\n              {\r\n                value: 'Лермонтова',\r\n                label: 'Лермонтова',\r\n              },\r\n              {\r\n                value: 'Рафиева',\r\n                label: 'Рафиева',\r\n              },\r\n              {\r\n                value: 'Розы Люксембург',\r\n                label: 'Розы Люксембург',\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            value: 'Фрунзенский район',\r\n            label: 'Фрунзенский район',\r\n            children: [\r\n              {\r\n                value: 'Бирюзова',\r\n                label: 'Бирюзова',\r\n              },\r\n              {\r\n                value: 'Скриганова',\r\n                label: 'Скриганова',\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            value: 'Ленинский район',\r\n            label: 'Ленинский район',\r\n            children: [\r\n              {\r\n                value: 'проспект Рокоссовского',\r\n                label: 'проспект Рокоссовского',\r\n              },\r\n              {\r\n                value: 'Ташкентская',\r\n                label: 'Ташкентская',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n}\r\n\r\nexport default function Registry() {\r\n  const [form] = Form.useForm()\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', values)\r\n  }\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"375\">+375</Option>\r\n        <Option value=\"7\">+7</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  )\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"registry\">\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          initialValues={{\r\n            residence: ['Беларусь', 'Минск'],\r\n            prefix: '375',\r\n          }}\r\n          scrollToFirstError\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"api@example.com\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password placeholder=\"Please input your password!\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve()\r\n                  }\r\n\r\n                  return Promise.reject(\r\n                    new Error('Введенные пароли не совпадают!')\r\n                  )\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password placeholder=\"Please confirm your password!\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"nickname\"\r\n            label=\"Nickname\"\r\n            tooltip=\"Как к Вам обращаться?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your nickname!',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Please input your nickname!\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"residence\"\r\n            label=\"Ваше местонахождение\"\r\n            rules={[\r\n              {\r\n                type: 'array',\r\n                required: true,\r\n                message: 'Please select your habitual residence!',\r\n              },\r\n            ]}\r\n          >\r\n            <Cascader options={residences} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"phone\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your phone number!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              addonBefore={prefixSelector}\r\n              style={{\r\n                width: '100%',\r\n              }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select gender!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"select your gender\">\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Captcha\"\r\n            extra=\"We must make sure that your are a human.\"\r\n          >\r\n            <Row gutter={8}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"captcha\"\r\n                  noStyle\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input the captcha you got!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Should accept agreement')),\r\n              },\r\n            ]}\r\n            {...tailFormItemLayout}\r\n          >\r\n            <Checkbox>\r\n              I have read the <a href=\"https://www.google.com/\">agreement</a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './header.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport HomePage from '../content/homePage'\r\nimport Login from '../content/login'\r\nimport Registry from '../content/registry'\r\n// import ErrorPage from '../content/errorPage'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Router>\r\n      <div className=\"header\">\r\n        <ul className=\"routeItem\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/registry\">Registry</Link>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login/>\r\n          </Route>\r\n          <Route path=\"/registry\">\r\n            <Registry/>\r\n          </Route>\r\n          {/* <Route>\r\n            <ErrorPage/>\r\n          </Route> */}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import './App.css';\nimport './content/content.css'\nimport Header from './header/header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}